# -*- coding: utf-8 -*-
"""Choropleth charts - Joel

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wuSOiPrW8TuMKgsX5yMcfkOYkEf-l_go
"""

import plotly.graph_objects as go
import pandas as pd

# Load the data from the CSV file
df = pd.read_csv('Combined_Version_3.csv')

# Filter out rows with null or zero values in Search Parameter column
df = df[df['Search Parameter'].notnull() & (df['Search Parameter'] != 0)]

# Define the job titles and colors for the legend
job_titles = ['Data Analyst', 'Data Scientist', 'Data Engineer', 'All']
colors = ['Teal', 'Purpor', 'Oryel', 'Turbid']

# Create an empty list to store the traces for each job title
data = []

# Loop through each job title and create a choropleth trace
for i, title in enumerate(job_titles):
    # Filter the data for the current job title
    if title == 'All':
        filtered_df = df
    else:
        filtered_df = df[df['Job Title'] == title]
    # Group the data by state and find the count of jobs for each state
    state_freq = filtered_df.groupby('State Code')['Search Parameter'].count()
    # Create the choropleth trace for the current job title
    trace = go.Choropleth(
        locations=state_freq.index, # Spatial coordinates
        z=state_freq.astype(float), # Data to be color-coded
        locationmode='USA-states', # set of locations match entries in `locations`
        colorscale=colors[i],
        colorbar_title="Job Frequency",
        visible=(i==0) # Only show the first trace by default
    )
    # Add the trace to the list of traces
    data.append(trace)

# Create the layout for the figure
layout = go.Layout(
    title_text='Job Frequency By State',
    geo_scope='usa', # limit map scope to USA,
    updatemenus=[dict(
        type='buttons',
        showactive=True,
        buttons=[dict(
            label=title,
            method='update',
            args=[{'visible': [i==j for j in range(len(job_titles))]}]
        ) for i, title in enumerate(job_titles)]
    )]
)

# Create the figure using the data and layout
fig = go.Figure(data=data, layout=layout)

# Show the figure
fig.show()

import plotly.graph_objects as go
import pandas as pd

df = pd.read_csv('Combined_Version_3.csv')
# replace the url with the shared csv file url in your google drive

df = df[(df['Yearly Min'].notnull()) & (df['Yearly Min'] != 0)] # filter out null and 0 values

min_salaries = df.groupby('State Code')['Yearly Min'].min().reset_index()

fig = go.Figure(data=go.Choropleth(
    locations=min_salaries['State Code'], # Spatial coordinates
    z = min_salaries['Yearly Min'].astype(float), # Data to be color-coded
    locationmode = 'USA-states', # set of locations match entries in `locations`
    colorscale = 'Emrld',
    colorbar_title = "Salary Range",
))

fig.update_layout(
    title_text = 'Lowest Yearly Minimum Salary By State',
    geo_scope='usa', # limit map scope to USA
)

fig.show()

import plotly.graph_objects as go
import pandas as pd

df = pd.read_csv('Combined_Version_3.csv')

# Group the dataframe by 'State Code' and take the max of 'Yearly Max' column
Max_Salary = df.groupby('State Code')['Yearly Max'].max()

fig = go.Figure(data=go.Choropleth(
    locations=Max_Salary.index, # Spatial coordinates
    z = Max_Salary.values.astype(float), # Data to be color-coded
    locationmode = 'USA-states', # set of locations match entries in `locations`
    colorscale = 'Reds',
    colorbar_title = "Salary Max",
))

fig.update_layout(
    title_text = 'Max Yearly Salary By State',
    geo_scope='usa', # limit map scope to USA
)

fig.show()